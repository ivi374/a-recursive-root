version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ai-council-backend
    ports:
      - "8000:8000"
    environment:
      # LLM API Keys (set in .env)
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - XAI_API_KEY=${XAI_API_KEY}

      # Event Source API Keys
      - TWITTER_BEARER_TOKEN=${TWITTER_BEARER_TOKEN}
      - NEWS_API_KEY=${NEWS_API_KEY}

      # TTS API Keys
      - ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY}

      # Application Config
      - LOG_LEVEL=INFO
      - CONFIG_PATH=/app/config/config.yaml
    volumes:
      - ./logs:/app/logs
      - ./output:/app/output
      - ./config:/app/config
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend (Next.js)
  frontend:
    build:
      context: ./web/frontend
      dockerfile: Dockerfile
    container_name: ai-council-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_WS_URL=ws://localhost:8000/ws
    depends_on:
      - backend
    restart: unless-stopped

  # Redis (for caching and pub/sub)
  redis:
    image: redis:7-alpine
    container_name: ai-council-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

  # PostgreSQL (for persistent storage)
  postgres:
    image: postgres:16-alpine
    container_name: ai-council-postgres
    environment:
      - POSTGRES_DB=ai_council
      - POSTGRES_USER=council_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-changeme}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  # Nginx (reverse proxy and load balancer)
  nginx:
    image: nginx:alpine
    container_name: ai-council-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    restart: unless-stopped

volumes:
  redis_data:
  postgres_data:

networks:
  default:
    name: ai-council-network
